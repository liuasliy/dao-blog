webpackHotUpdate("static\\development\\pages\\index.js",{

/***/ "./components/Layout.js":
/*!******************************!*\
  !*** ./components/Layout.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ "./node_modules/styled-jsx/style.js");
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Header__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Header */ "./components/Header.js");




var Layout = function Layout(props) {
  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
    className: "jsx-3661191381"
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_Header__WEBPACK_IMPORTED_MODULE_2__["default"], null), props.children, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
    id: "3661191381"
  }, "html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;}body,h1,h2,h3,h4,h5,h6,dl,dt,dd,ul,ol,li,div,a,pre,code,form,fieldset,button,input,textarea,p,address,em,label,img,th,td,iframe,sub,sup{padding:0;margin:0;}audio,canvas,progress,video{display:inline-block;}audio:not([controls]){display:none;height:0;}progress{vertical-align:baseline;}template,[hidden]{display:none;}a{background-color:transparent;-webkit-text-decoration-skip:objects;}a:active,a:hover{outline-width:0;}abbr[title]{border-bottom:none;-webkit-text-decoration:underline;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;}b,strong{font-weight:inherit;}b,strong{font-weight:bolder;}dfn{font-style:italic;}h1{font-size:2em;margin:0.67em 0;}mark{background-color:#ff0;color:#000;}small{font-size:80%;}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;}sub{bottom:-0.25em;}sup{top:-0.5em;}img{border-style:none;}svg:not(:root){overflow:hidden;}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em;}figure{margin:1em 40px;}hr{box-sizing:content-box;height:0;overflow:visible;}button,input,select,textarea{font:inherit;margin:0;}optgroup{font-weight:bold;}button,input{overflow:visible;}button,select{text-transform:none;}button,html [type=\"button\"],[type=\"reset\"],[type=\"submit\"]{-webkit-appearance:button;}button::-moz-focus-inner,[type=\"button\"]::-moz-focus-inner,[type=\"reset\"]::-moz-focus-inner,[type=\"submit\"]::-moz-focus-inner{border-style:none;padding:0;}button:-moz-focusring,[type=\"button\"]:-moz-focusring,[type=\"reset\"]:-moz-focusring,[type=\"submit\"]:-moz-focusring{outline:1px dotted ButtonText;}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em;}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal;}textarea{overflow:auto;}[type=\"checkbox\"],[type=\"radio\"]{box-sizing:border-box;padding:0;}[type=\"number\"]::-webkit-inner-spin-button,[type=\"number\"]::-webkit-outer-spin-button{height:auto;}[type=\"search\"]{-webkit-appearance:textfield;outline-offset:-2px;}[type=\"search\"]::-webkit-search-cancel-button,[type=\"search\"]::-webkit-search-decoration{-webkit-appearance:none;}::-webkit-input-placeholder{color:inherit;opacity:0.54;}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit;}html{font-size:100px;}*{box-sizing:border-box;}@media screen and (min-width:320px){html{font-size:42.67px;}body{font-size:12px;}}@media screen and (min-width:360px){html{font-size:48px;}body{font-size:12px;}}@media screen and (min-width:375px){html{font-size:50px;}body{font-size:12px;}}@media screen and (min-width:384px){html{font-size:51.2px;}body{font-size:14px;}}@media screen and (min-width:400px){html{font-size:53.33px;}body{font-size:14px;}}@media screen and (min-width:414px){html{font-size:55.2px;}body{font-size:14px;}}@media screen and (min-width:424px){html{font-size:56.53px;}body{font-size:14px;}}@media screen and (min-width:480px){html{font-size:64px;}body{font-size:15.36px;}}@media screen and (min-width:540px){html{font-size:72px;}body{font-size:17.28px;}}@media screen and (min-width:720px){html{font-size:96px;}body{font-size:23.04px;}}@media screen and (min-width:750px){html{font-size:100px;margin:0 auto;}body{font-size:24px;}}body{-webkit-overflow-scrolling:touch;overflow-x:hidden;width:100%;font-family:\"Pingfang SC\",STHeiti,\"Lantinghei SC\",\"Open Sans\",Arial,\"Hiragino Sans GB\",\"Microsoft YaHei\",\"WenQuanYi Micro Hei\",SimSun,sans-serif;font-size:.16rem;}img{width:100%;display:block;}.bg{background-repeat:no-repeat;background-position:center;background-size:cover;}ul,li{list-style:none;margin:0;padding:0;}table{border-collapse:collapse;border-spacing:0;}div{box-sizing:border-box;}::-webkit-scrollbar{width:.08rem;height:1.20rem;background-color:transparent;}::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);border-radius:10px;background-color:transparent;}::-webkit-scrollbar-thumb{width:.08rem;height:1.20rem;border-radius:10px;background-color:rgba(0,0,0,.3);margin-right:.10rem;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=F:\\project\\blogdao\\components\\Layout.js */"));
};

/* harmony default export */ __webpack_exports__["default"] = (Layout);

/***/ })

})
//# sourceMappingURL=index.js.5fee2936d5aa0f1ff745.hot-update.js.map